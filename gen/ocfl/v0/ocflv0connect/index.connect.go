// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: ocfl/v0/index.proto

package ocflv0connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v0 "github.com/srerickson/ocfl-index/gen/ocfl/v0"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// IndexServiceName is the fully-qualified name of the IndexService service.
	IndexServiceName = "ocfl.v0.IndexService"
)

// IndexServiceClient is a client for the ocfl.v0.IndexService service.
type IndexServiceClient interface {
	// Basic info on the storage root & index status.
	GetSummary(context.Context, *connect_go.Request[v0.GetSummaryRequest]) (*connect_go.Response[v0.GetSummaryResponse], error)
	// Start a reindex process to scan the storage and ingest object inventories.
	Reindex(context.Context, *connect_go.Request[v0.ReindexRequest]) (*connect_go.ServerStreamForClient[v0.ReindexResponse], error)
	// OCFL Objects in the index
	ListObjects(context.Context, *connect_go.Request[v0.ListObjectsRequest]) (*connect_go.Response[v0.ListObjectsResponse], error)
	// Details on a specific OCFL object in the index
	GetObject(context.Context, *connect_go.Request[v0.GetObjectRequest]) (*connect_go.Response[v0.GetObjectResponse], error)
	// Query the logical state of an OCFL object version
	GetObjectState(context.Context, *connect_go.Request[v0.GetObjectStateRequest]) (*connect_go.Response[v0.GetObjectStateResponse], error)
}

// NewIndexServiceClient constructs a client for the ocfl.v0.IndexService service. By default, it
// uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and sends
// uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewIndexServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) IndexServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &indexServiceClient{
		getSummary: connect_go.NewClient[v0.GetSummaryRequest, v0.GetSummaryResponse](
			httpClient,
			baseURL+"/ocfl.v0.IndexService/GetSummary",
			opts...,
		),
		reindex: connect_go.NewClient[v0.ReindexRequest, v0.ReindexResponse](
			httpClient,
			baseURL+"/ocfl.v0.IndexService/Reindex",
			opts...,
		),
		listObjects: connect_go.NewClient[v0.ListObjectsRequest, v0.ListObjectsResponse](
			httpClient,
			baseURL+"/ocfl.v0.IndexService/ListObjects",
			opts...,
		),
		getObject: connect_go.NewClient[v0.GetObjectRequest, v0.GetObjectResponse](
			httpClient,
			baseURL+"/ocfl.v0.IndexService/GetObject",
			opts...,
		),
		getObjectState: connect_go.NewClient[v0.GetObjectStateRequest, v0.GetObjectStateResponse](
			httpClient,
			baseURL+"/ocfl.v0.IndexService/GetObjectState",
			opts...,
		),
	}
}

// indexServiceClient implements IndexServiceClient.
type indexServiceClient struct {
	getSummary     *connect_go.Client[v0.GetSummaryRequest, v0.GetSummaryResponse]
	reindex        *connect_go.Client[v0.ReindexRequest, v0.ReindexResponse]
	listObjects    *connect_go.Client[v0.ListObjectsRequest, v0.ListObjectsResponse]
	getObject      *connect_go.Client[v0.GetObjectRequest, v0.GetObjectResponse]
	getObjectState *connect_go.Client[v0.GetObjectStateRequest, v0.GetObjectStateResponse]
}

// GetSummary calls ocfl.v0.IndexService.GetSummary.
func (c *indexServiceClient) GetSummary(ctx context.Context, req *connect_go.Request[v0.GetSummaryRequest]) (*connect_go.Response[v0.GetSummaryResponse], error) {
	return c.getSummary.CallUnary(ctx, req)
}

// Reindex calls ocfl.v0.IndexService.Reindex.
func (c *indexServiceClient) Reindex(ctx context.Context, req *connect_go.Request[v0.ReindexRequest]) (*connect_go.ServerStreamForClient[v0.ReindexResponse], error) {
	return c.reindex.CallServerStream(ctx, req)
}

// ListObjects calls ocfl.v0.IndexService.ListObjects.
func (c *indexServiceClient) ListObjects(ctx context.Context, req *connect_go.Request[v0.ListObjectsRequest]) (*connect_go.Response[v0.ListObjectsResponse], error) {
	return c.listObjects.CallUnary(ctx, req)
}

// GetObject calls ocfl.v0.IndexService.GetObject.
func (c *indexServiceClient) GetObject(ctx context.Context, req *connect_go.Request[v0.GetObjectRequest]) (*connect_go.Response[v0.GetObjectResponse], error) {
	return c.getObject.CallUnary(ctx, req)
}

// GetObjectState calls ocfl.v0.IndexService.GetObjectState.
func (c *indexServiceClient) GetObjectState(ctx context.Context, req *connect_go.Request[v0.GetObjectStateRequest]) (*connect_go.Response[v0.GetObjectStateResponse], error) {
	return c.getObjectState.CallUnary(ctx, req)
}

// IndexServiceHandler is an implementation of the ocfl.v0.IndexService service.
type IndexServiceHandler interface {
	// Basic info on the storage root & index status.
	GetSummary(context.Context, *connect_go.Request[v0.GetSummaryRequest]) (*connect_go.Response[v0.GetSummaryResponse], error)
	// Start a reindex process to scan the storage and ingest object inventories.
	Reindex(context.Context, *connect_go.Request[v0.ReindexRequest], *connect_go.ServerStream[v0.ReindexResponse]) error
	// OCFL Objects in the index
	ListObjects(context.Context, *connect_go.Request[v0.ListObjectsRequest]) (*connect_go.Response[v0.ListObjectsResponse], error)
	// Details on a specific OCFL object in the index
	GetObject(context.Context, *connect_go.Request[v0.GetObjectRequest]) (*connect_go.Response[v0.GetObjectResponse], error)
	// Query the logical state of an OCFL object version
	GetObjectState(context.Context, *connect_go.Request[v0.GetObjectStateRequest]) (*connect_go.Response[v0.GetObjectStateResponse], error)
}

// NewIndexServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewIndexServiceHandler(svc IndexServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/ocfl.v0.IndexService/GetSummary", connect_go.NewUnaryHandler(
		"/ocfl.v0.IndexService/GetSummary",
		svc.GetSummary,
		opts...,
	))
	mux.Handle("/ocfl.v0.IndexService/Reindex", connect_go.NewServerStreamHandler(
		"/ocfl.v0.IndexService/Reindex",
		svc.Reindex,
		opts...,
	))
	mux.Handle("/ocfl.v0.IndexService/ListObjects", connect_go.NewUnaryHandler(
		"/ocfl.v0.IndexService/ListObjects",
		svc.ListObjects,
		opts...,
	))
	mux.Handle("/ocfl.v0.IndexService/GetObject", connect_go.NewUnaryHandler(
		"/ocfl.v0.IndexService/GetObject",
		svc.GetObject,
		opts...,
	))
	mux.Handle("/ocfl.v0.IndexService/GetObjectState", connect_go.NewUnaryHandler(
		"/ocfl.v0.IndexService/GetObjectState",
		svc.GetObjectState,
		opts...,
	))
	return "/ocfl.v0.IndexService/", mux
}

// UnimplementedIndexServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedIndexServiceHandler struct{}

func (UnimplementedIndexServiceHandler) GetSummary(context.Context, *connect_go.Request[v0.GetSummaryRequest]) (*connect_go.Response[v0.GetSummaryResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("ocfl.v0.IndexService.GetSummary is not implemented"))
}

func (UnimplementedIndexServiceHandler) Reindex(context.Context, *connect_go.Request[v0.ReindexRequest], *connect_go.ServerStream[v0.ReindexResponse]) error {
	return connect_go.NewError(connect_go.CodeUnimplemented, errors.New("ocfl.v0.IndexService.Reindex is not implemented"))
}

func (UnimplementedIndexServiceHandler) ListObjects(context.Context, *connect_go.Request[v0.ListObjectsRequest]) (*connect_go.Response[v0.ListObjectsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("ocfl.v0.IndexService.ListObjects is not implemented"))
}

func (UnimplementedIndexServiceHandler) GetObject(context.Context, *connect_go.Request[v0.GetObjectRequest]) (*connect_go.Response[v0.GetObjectResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("ocfl.v0.IndexService.GetObject is not implemented"))
}

func (UnimplementedIndexServiceHandler) GetObjectState(context.Context, *connect_go.Request[v0.GetObjectStateRequest]) (*connect_go.Response[v0.GetObjectStateResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("ocfl.v0.IndexService.GetObjectState is not implemented"))
}
